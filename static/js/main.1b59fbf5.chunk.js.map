{"version":3,"sources":["components/Body/Body.tsx","utils/getRandomInt.ts","components/Card/Card.tsx","i18n/index.ts","i18n/en/en.ts","i18n/en/decks/index.ts","i18n/en/decks/main.ts","i18n/en/decks/dating.ts","i18n/en/common.ts","i18n/ru/ru.ts","i18n/ru/decks/index.ts","i18n/ru/decks/main.ts","i18n/ru/decks/dating.ts","i18n/ru/common.ts","containers/Field/Field.tsx","containers/Field/useCardsTransform.ts","assets/svg/friends.svg","components/Header/Header.tsx","components/ActionBar/ActionBar.tsx","containers/App/App.tsx","utils/shuffleArray.ts","reportWebVitals.ts","index.tsx"],"names":["ContainerStyled","styled","Container","Body","children","maxWidth","getRandomInt","min","max","rand","Math","random","floor","CardStyled","div","isWildCard","transform","TextStyled","Card","text","includes","content","replace","trim","memo","labels","en","decks","main","one","two","tree","dating","common","title","levels","languages","ru","FieldStyled","FieldCardsCounter","ButtonPrevStyled","Button","ButtonNextStyled","Field","deck","deckLevel","language","initialCard","length","otherCards","slice","cardsTransform","useState","setCardsTransform","useEffect","map","_","i","rotate","translateX","translateY","useCardsTransform","deckCards","setDeckCards","fieldCards","setFieldCards","updateDecks","type","from","to","lastCard","updatedFromCards","updatedToCards","isPrevDisabled","isNextDisabled","onClick","disabled","index","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","d","id","filterUnits","height","width","x","y","dx","dy","in","result","stdDeviation","values","fill","fillRule","stroke","strokeWidth","fillOpacity","filter","xlinkHref","SvgFriends","_ref","svgRef","titleId","props","viewBox","xmlns","xmlnsXlink","ref","ForwardRef","LogoIconStyled","LogoIcon","Header","setLanguage","ID","labelCommon","languagesOptions","AppBar","position","style","display","justifyContent","alignItems","padding","FormControl","sx","color","InputLabel","Select","name","value","label","labelId","onChange","event","MenuItem","ListItemText","primary","ActionBar","deckVariant","setDeckLevel","setDeckVariant","levelOptions","variant","variantOptions","handleChange","Paper","elevation","minWidth","App","deckShuffled","array","randomIndex","currentIndex","shuffleArray","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAKMA,EAAkBC,YAAOC,IAAPD,CAAH,mHAWNE,EAJQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OAAO,cAACJ,EAAD,CAAiBK,SAAS,KAA1B,SAAgCD,KCT5BE,EAAe,SAACC,EAAaC,GACxC,IAAIC,EAAOC,KAAKC,UAAYH,EAAMD,GAAOA,EACzC,OAAOG,KAAKE,MAAMH,ICDdI,EAAaZ,IAAOa,IAAV,0jBAiBL,qBAAGC,WAA+B,OAAS,aAChC,qBAAGA,WAA+B,UAAY,aACrD,qBAAGC,aAKZC,EAAahB,IAAOa,IAAV,mEAKHI,EAAwB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMH,EAAgB,EAAhBA,UACtCD,EAAaI,EAAKC,SAAS,aAC3BC,EAAUN,EAAaI,EAAKG,QAAQ,cAAe,IAAIC,OAASJ,EAEtE,OACE,cAACN,EAAD,CAAYG,UAAWA,EAAWD,WAAYA,EAA9C,SACE,cAACE,EAAD,UAAaI,OAKJG,iBAAKN,G,0BC1CPO,EAAS,CACpBC,GCDgB,CAChBC,MCDmB,CACnBC,KC4JkB,CAClBC,IAjKU,CACV,wCACA,mEACA,0EACA,wCACA,sCACA,sEACA,iEACA,kFACA,mDACA,mEACA,0CACA,6BACA,0CACA,6DACA,+CACA,8CACA,2GACA,kDACA,2BACA,sDACA,gDACA,uEACA,oEACA,gDACA,uDACA,4FACA,kDACA,4CACA,yDACA,yGACA,iDACA,iEACA,oDACA,oEACA,sDACA,+BACA,+DAEA,0EACA,qDACA,mFACA,kDACA,oHACA,iGACA,oHACA,yHACA,0HACA,qDACA,yDAiHAC,IA9GiB,CACjB,sCACA,qEACA,4FACA,iEACA,2EACA,oCACA,wDACA,wEACA,kDACA,4CACA,8EACA,8DACA,+CACA,wEACA,mFACA,yGACA,+BACA,mDACA,iDACA,mEACA,8DACA,4DACA,yDACA,6BACA,8DACA,sDACA,6BACA,mEACA,kEACA,gEACA,uDACA,yCACA,uBACA,qEACA,mGACA,sEACA,iEAEA,wIACA,2FACA,kGACA,6BACA,iEACA,kIACA,0CACA,+DACA,uCACA,4EACA,iEACA,mIACA,+FACA,wFA2DAC,KAxDW,CACX,2CACA,oCACA,yCACA,oCACA,4EACA,kDACA,iDACA,gFACA,gDACA,4BACA,wGACA,oCACA,4EACA,sCACA,6DACA,uDACA,+EACA,sDACA,+BACA,wDACA,yCACA,2DACA,2CACA,kDACA,2BACA,oCACA,yCACA,qCACA,wDACA,4EACA,mDACA,8EACA,kDACA,gDAEA,6EACA,sHACA,0EACA,6GACA,6BACA,6EACA,0GACA,yIACA,0FACA,6GACA,uCACA,qDACA,oCACA,0GACA,8FDxJAC,OEyDoB,CACpBH,IA/DU,CACV,iEACA,oDACA,2CACA,2GACA,wDACA,qEACA,uEAEA,gHAuDAC,IApDU,CACV,qCACA,mFACA,+CACA,wEACA,oDACA,8DACA,mDACA,6EACA,0DACA,8BACA,yDACA,iEACA,0DACA,gFACA,gEACA,4CACA,uCACA,qFACA,uDACA,4DACA,mDACA,uDACA,2EACA,wCACA,yGAEA,qFACA,gHACA,kFACA,gFACA,wGACA,gIAqBAC,KAlBW,CACX,+CACA,yFACA,qEACA,6DACA,+CACA,iEACA,sDACA,iEAEA,mGACA,2GACA,+DHtDAE,OILoB,CACpBN,MAAO,CACLO,MAAO,OACPN,KAAM,OACNI,OAAQ,UAGVG,OAAQ,CACND,MAAO,QACPL,IAAK,UACLC,IAAK,UACLC,KAAM,WAGRK,UAAW,CACTF,MAAO,WACPG,GAAI,KACJX,GAAI,QLZNW,GMFgB,CAChBV,MCDmB,CACnBC,KC4JkB,CAClBC,IAjKU,CACV,kOACA,iYACA,+ZACA,4KACA,6IACA,uZACA,uZACA,mbACA,mPACA,iTACA,oMACA,kJACA,8LACA,kXACA,2MACA,+NACA,udACA,wOACA,sIACA,6RACA,mNACA,kZACA,saACA,yQACA,4MACA,idACA,mOACA,kKACA,2YACA,4lBACA,8PACA,oWACA,mSACA,iZACA,oRACA,sGACA,0UAEA,4YACA,oNACA,yYACA,oMACA,gfACA,icACA,sgBACA,0fACA,whBACA,wMACA,kOAiHAC,IA9GU,CACV,oFACA,4OACA,0dACA,uZACA,oXACA,sIACA,oOACA,qcACA,0MACA,uIACA,kSACA,4UACA,gQACA,8RACA,ycACA,6aACA,iNACA,2SACA,sNACA,mRACA,0QACA,0QACA,oPACA,iGACA,wOACA,kOACA,2IACA,uSACA,sTACA,mLACA,4PACA,iOACA,wGACA,uUACA,4aACA,sSACA,iTAEA,kpBACA,ycACA,8gBACA,2GACA,sXACA,4mBACA,wNACA,oQACA,kLACA,8TACA,gVACA,8mBACA,6TACA,saA2DAC,KAxDW,CACX,iLACA,wLACA,gNACA,oMACA,wbACA,qKACA,kQACA,mXACA,8MACA,qHACA,6hBACA,6LACA,mYACA,mLACA,wOACA,wVACA,8ZACA,6PACA,kJACA,oOACA,2NACA,yQACA,4KACA,+MACA,oMACA,6KACA,iNACA,kNACA,wLACA,gUACA,6VACA,4WACA,6NACA,oRAEA,4SACA,+lBACA,4aACA,+hBACA,2GACA,idACA,ueACA,ysBACA,gZACA,0pBACA,qJACA,oQACA,kIACA,whBACA,sYDxJAC,OEyDoB,CACpBH,IA/DU,CACV,oXACA,yQACA,mOACA,ydACA,qQACA,2ZACA,0VAEA,4eAuDAC,IApDU,CACV,4NACA,0UACA,oRACA,iVACA,yQACA,sSACA,sMACA,scACA,gZACA,yJACA,qRACA,yYACA,+SACA,sXACA,gPACA,8LACA,oMACA,gVACA,+QACA,qVACA,yLACA,iNACA,sRACA,sNACA,ygBAEA,wWACA,4cACA,oYACA,4XACA,uaACA,+oBAqBAC,KAlBW,CACX,yMACA,+aACA,4UACA,8VACA,yOACA,kZACA,+RACA,iSAEA,igBACA,+gBACA,+OHtDAE,OILoB,CACpBN,MAAO,CACLO,MAAO,uCACPN,KAAM,6CACNI,OAAQ,oDAGVG,OAAQ,CACND,MAAO,6CACPL,IAAK,+CACLC,IAAK,+CACLC,KAAM,gDAGRK,UAAW,CACTF,MAAO,2BACPG,GAAI,KACJX,GAAI,SCLFY,EAAcrC,IAAOa,IAAV,0IAQXyB,EAAoBtC,IAAOa,IAAV,qIAQjB0B,EAAmB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","file":"static/js/main.1b59fbf5.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Container } from \"@mui/material\";\n\nconst ContainerStyled = styled(Container)`\n  overflow-y: auto;\n  overflow-x: hidden;\n  height: 100%;\n  padding: 0 !important;\n`;\n\nconst Body: React.FC = ({ children }) => {\n  return <ContainerStyled maxWidth=\"md\">{children}</ContainerStyled>;\n};\n\nexport default Body;\n","/**\n *\n * Get random integer\n */\nexport const getRandomInt = (min: number, max: number): number => {\n  let rand = Math.random() * (max - min) + min;\n  return Math.floor(rand);\n};\n","import React, { memo } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Props } from \"./types\";\n\nconst CardStyled = styled.div<{ transform: string; isWildCard: boolean }>`\n  z-index: 1;\n  position: absolute;\n  display: flex;\n  text-align: center;\n  align-items: center;\n  margin-top: -60px;\n  width: calc(100% - 40px);\n  max-width: 480px;\n  min-height: 270px;\n  padding: 12px 24px;\n  border-radius: 60px;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${({ isWildCard }) => (isWildCard ? \"#fff\" : \"#c10016\")};\n  background-color: ${({ isWildCard }) => (isWildCard ? \"#c10016\" : \"#f6f6f6\")};\n  transform: ${({ transform }) => transform};\n  box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n    0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n`;\n\nconst TextStyled = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nexport const Card: React.FC<Props> = ({ text, transform }) => {\n  const isWildCard = text.includes(\"Wild Card\");\n  const content = isWildCard ? text.replace(/Wild Card/gi, \"\").trim() : text;\n\n  return (\n    <CardStyled transform={transform} isWildCard={isWildCard}>\n      <TextStyled>{content}</TextStyled>\n    </CardStyled>\n  );\n};\n\nexport default memo(Card);\n","import { en } from \"./en/en\";\nimport { ru } from \"./ru/ru\";\n\nexport const labels = {\n  en,\n  ru,\n};\n","import { decks } from \"./decks\";\nimport { common } from \"./common\";\n\nexport const en = {\n  decks,\n  common,\n};\n","import { main } from \"./main\";\nimport { dating } from \"./dating\";\n\nexport const decks = {\n  main,\n  dating,\n};\n","const one = [\n  \"What was your first impression of me?\",\n  \"What do you think is the hardest part of what I do for a living?\",\n  \"What reality show do you think I'm most likely to binge watch? Explain.\",\n  \"What does my style tell you about me?\",\n  \"Do I seem like a cat or dog person?\",\n  \"Do I seem like more of a creative type or analytical type? Explain.\",\n  \"How many speeding tickets do you think I've gotten in my life?\",\n  \"Do I seem like someone who would get a name tattooed on myself? Why or why not?\",\n  \"What do you think I'm most likely to splurge on?\",\n  \"Finish the sentence: Just by looking at you I'd think _________.\",\n  \"What character would I play in a movie?\",\n  \"Do I remind you of anyone?\",\n  \"Who do you think my celebrity crush is?\",\n  \"Do you think I've ever checked an ex's phone for evidence?\",\n  \"What's the first thing you noticed about me?\",\n  \"What do you think my go to karaoke song is?\",\n  \"If you were to buy me a present, knowing nothing about me other than what I look like, what would it be?\",\n  \"What does my phone wallpaper tell you about me?\",\n  \"Do I look kind? explain.\",\n  \"Do you think I fall in love easily? why or why not?\",\n  \"As a child, what do you think I wanted to be?\",\n  \"Do you think I'm usually early, on time, or late to events? Explain.\",\n  \"What subject do you think I thrived in at school? Did I fail any?\",\n  \"What compliment do you think I hear the most?\",\n  \"Do I seem like a morning person or a night owl? why?\",\n  \"What fast food restaurant do you think I'm most likely to drive through? What's my order?\",\n  \"What is my body language telling you right now?\",\n  \"What does my Instagram tell you about me?\",\n  \"Do you think plants thrive or die in my care? Explain.\",\n  \"On a scale of 1-10, how messy do you think my car is? 1 being cleanest, 10 complete disaster. Explain.\",\n  \"Do you think I was popular in school? explain.\",\n  \"Do you think I've ever been fired from a job? If so, what for?\",\n  \"Do you think I intimidate others? Why or why not?\",\n  \"How likely am I to go camping? How high maintenance is my set up?\",\n  \"What about me is most strange or unfamiliar to you?\",\n  \"What about me intrigues you?\",\n  \"If Myspace were still a thing what would my profile song be?\",\n\n  \"Wild Card Maintain eye contact for thirty seconds. What did you notice?\",\n  \"Wild Card Close your eyes. What color is my shirt?\",\n  \"Wild Card Ask and answer the next question in a different accent. (Both players)\",\n  \"Wild Card Draw a picture together. (30 seconds)\",\n  \"Wild Card Write down something others would never guess about you just by looking at you. (Both players) Compare.\",\n  \"Wild Card Draw a portrait of each other to the best of your ability. (1 minute) Then exchange.\",\n  \"Wild Card Think of your favorite brand of cereal. On the count of three say your answers out loud! (Both players)\",\n  \"Wild Card Think of your favorite childhood tv show of all time. On the count of three, say it out loud! (Both players)\",\n  \"Wild Card Rate your dancing skills on a scale of 1-10. On the count of three, say your answers out loud! (Both players)\",\n  \"Wild Card Close your eyes. What color are my eyes?\",\n  \"Wild Card Make an assumption about me. (Both players)\",\n];\n\nexport const two = [\n  \"How can you become a better person?\",\n  \"What's your mother's name? And the most beautiful thing about her?\",\n  \"If you could get to know someone in your life on a deeper level, who would it be and why?\",\n  \"What's the most pain you've ever been in that wasn't physical?\",\n  \"Are you missing anyone right now? Do you think they are missing you too?\",\n  \"What is a dream you've let go of?\",\n  \"What is the last thing you lied to your mother about?\",\n  \"Have you ever told someone I love you but didn't mean it? If so, why?\",\n  \"What are you still trying to prove to yourself?\",\n  \"Are you lying to yourself about anything?\",\n  \"What is your 1st love's name and the reason you fell in love with him/her ?\",\n  \"What part of your life works? What part of your life hurts?\",\n  \"What lesson took you the longest to unlearn?\",\n  \"If you have, when was the moment you realized you weren't invincible?\",\n  \"Do you think the image you have of yourself matches the image people see you as?\",\n  \"If you could have it your way: Who would you be with? Where would you be? And what would you be doing?\",\n  \"Is there a feeling you miss?\",\n  \"What's been your happiest memory this past year?\",\n  \"When was the last time you surprised yourself?\",\n  \"How would you describe the feeling of being in love in one word?\",\n  \"What's your father's name? And tell me one thing about him.\",\n  \"What are you more afraid of, failure or success? And why?\",\n  \"What has been your earliest recollection of happiness?\",\n  \"What do you crave more of?\",\n  \"What is a compliment you wish you received more frequently?\",\n  \"Have you changed your mind about anything recently?\",\n  \"Describe your perfect day!\",\n  \"What is the mostunexplainable thing that's ever happened to you?\",\n  \"What would your younger self not believe about your life today?\",\n  \"What is something you wouldn't want to change about yourself?\",\n  \"What title would you give this chapter in your life?\",\n  \"Has a stranger ever changed your life?\",\n  \"How are you, really?\",\n  \"When you're asked how are you, how often do you answer truthfully?\",\n  \"Finish the sentences: strangers would describe me as _________. Only I know that I am _________.\",\n  \"What question are you trying to answer most in your life right now?\",\n  \"What's been the best compliment a stranger has ever given you?\",\n\n  \"Wild Card Staring contest. First to blink must reveal a personal problem and ask your partner for advice on how they might handle it.\",\n  \"Wild Card Ask a question you'd be too afraid to ask. Something you wouldn't dare to ask.\",\n  \"Wild Card Call someone you admire and tell them why you appreciate them! (Put on speaker phone)\",\n  \"Wild Card Admit something.\",\n  \"Wild Card Questions are an art form. Create your own question.\",\n  \"Wild Card Think of something you strongly dislike that most people love. On the count of three, say it out loud! (Both players)\",\n  \"Wild Card Swap seats with your partner.\",\n  \"Wild Card Show the first photo in your camera roll. Explain.\",\n  \"Wild Card Create a secret handshake.\",\n  \"Wild Card Sing the chorus of your favorite song of all time. Get into it!\",\n  \"Wild Card Draw your current mood. Then Compare. (Both players)\",\n  \"Wild Card Both players write an embarrassing fun fact about yourselves. Play a game of rock, paper, scissors. Loser must reveal!\",\n  \"Wild Card Both players write the most important things in life to you. (30 seconds) Compare.\",\n  \"Wild Card Press shuffle on your music library. Explain the first song that comes up!\",\n];\n\nconst tree = [\n  \"How would you describe me to a stranger?\",\n  \"What about me most surprised you?\",\n  \"What would be the perfect gift for me?\",\n  \"What do you admire most about me?\",\n  \"Based on what you learned about me, what book would you recommend I read?\",\n  \"What about me is hardest for you to understand?\",\n  \"What am I most qualified to give advice about?\",\n  \"What is one thing you think I can do that would dramatically improve my life?\",\n  \"If we were in a band, what would our name be?\",\n  \"What can I help you with?\",\n  \"Based on what you learned about me, does my social media accurately reflect who I am? Why or why not?\",\n  \"What do I need to hear right now?\",\n  \"Based on what you know about me, do you have any Netflix recommendations?\",\n  \"What do you think my superpower is?\",\n  \"What is a lesson you will take away from our conversation?\",\n  \"When in this game did you feel most connected to me?\",\n  \"How does one earn your vulnerability? Have I earned it? How can I earn more?\",\n  \"What do you think our most important similarity is?\",\n  \"What can we create together?\",\n  \"In one word, how would you describe our conversation?\",\n  \"What answer of mine made you light up?\",\n  \"When this game is over, what will you remember about me?\",\n  \"What parts of yourself do you see in me?\",\n  \"How do our personalities complement each other?\",\n  \"Why do you think we met?\",\n  \"What do you think my weakness is?\",\n  \"What would make you feel closer to me?\",\n  \"What do you think I fear the most?\",\n  \"What has this conversation taught you about yourself?\",\n  \"What do you think I should know about myself that perhaps I'm unaware of?\",\n  \"What do you think my defining characteristic is?\",\n  \"Do you believe everyone has a calling? If so, do you think I've found mine?\",\n  \"What do you recommend I let go of, if anything?\",\n  \"In one word, describe how you feel right now.\",\n\n  \"Wild Card Give your partner a hug. Not the crappy kind. A ward fluffy one.\",\n  \"Wild Card Write down one thing you want to let go of this year. Read out loud, then rip up together. (Both players)\",\n  \"Wild Card Swap a song suggestion your partner may enjoy. (Both players)\",\n  \"Wild Card Dare your partner to do something outside of their comfort zone in the next week. (Both players)\",\n  \"Wild Card Admit something.\",\n  \"Wild Card Give your partner a compliment you don't think they hear enough.\",\n  \"Wild Card Write a song about your partner. (30 seconds) Then sing it aloud, get into it! (Both players)\",\n  \"Wild Card Scroll through each other's Instagrams. Find the picture you feel best represents your partner's essence and comment on why.\",\n  \"Wild Card Both players share something you're most grateful for in this current moment.\",\n  \"Wild Card Play a round of rock, paper, scissors. Winner can ask their partner anything. Loser must answer.\",\n  \"Wild Card Give each other nicknames!\",\n  \"Wild Card Create your own question. Make it count.\",\n  \"Wild Card Take a selfie together.\",\n  \"Wild Card Write down a goal for this year. Fold & exchange. Hold each other accountable. (Both players)\",\n  \"Wild Card Both players write a note to your younger selves. (1 minute) Option to compare.\",\n];\n\nexport const main = {\n  one,\n  two,\n  tree,\n};\n","const one = [\n  \"Just by looking at me, what would you think I do for a living?\",\n  \"What do you think my type is? Describe in detail.\",\n  \"What do you think my drink of choice is?\",\n  \"How many relationship do you think I've been in? How many times do you think I've been in love? Explain.\",\n  \"What do you think I was like in high school? Explain.\",\n  \"Do you think I'm still on good terms with my exes? Why or why not?\",\n  \"What was the first thing you noticed about me when we met in person?\",\n\n  \"Wild Card Write down your 3 favorite physical features of your partner and read them out loud. Both players.\",\n];\n\nconst two = [\n  \"What are you feeling a lot lately?\",\n  \"Do you have any unconventional opinions when it comes to romantic relationships?\",\n  \"I know I really like someone when _________.\",\n  \"Has sex ever been a deal breaker in your past relationships? Explain.\",\n  \"When's the last time you ghosted someone and why?\",\n  \"What about me intrigued you besides my physical appearance?\",\n  \"What do your friends know about me, if anything?\",\n  \"What part of your job energizes you the most? Leaves you the most drained?\",\n  \"How has your view on love evolved over time, if at all?\",\n  'How do you define \"Dating\"?',\n  \"Describe your worst heartbreak. What did it teach you?\",\n  \"Have you ever considered an open relationship? Why or why not?\",\n  \"Who in your life do you feel most yourself around? Why?\",\n  \"Which one of your parents' personality traits do you want to keep? Let go of?\",\n  \"What is something new you've learned about yourself recently?\",\n  \"What's the hardest part about dating you?\",\n  \"What are you overthinking right now?\",\n  \"What have you tolerated from others in the past that you no longer have space for?\",\n  \"What dating advice would you give your younger self?\",\n  \"How emotionally available do you currently feel? Explain.\",\n  \"What has being single taught you about yourself?\",\n  \"What was the worst date you've ever been on and why?\",\n  \"What about you has felt repeatedly misunderstood by others, if anything?\",\n  \"What's a non-negotiable in your life?\",\n  \"What did the people who raised you teach you about love? How has that shaped your views on love today?\",\n\n  \"Wild Card Write down your top 2 relationship deal breakers. Both players. Compare.\",\n  \"Wild Card Write down your favorite song lyric you can think of off the top of your head. Compare and explain.\",\n  \"Wild Card Share something you typically wouldn't on a first date. Both players.\",\n  \"Wild Card Give each other tattoos with the nearest pen or marker. 30 seconds.\",\n  \"Wild Card Write down the top 3 most important qualities in a romantic partner. Both players. Compare.\",\n  \"Wild Card Think of the most underrated show streaming currently. On the count of 3, say your answers out loud. Both players.\",\n];\n\nconst tree = [\n  \"What song should I listen to on my way home?\",\n  \"Based on what you've learned about me, what do you think I'm looking for romantically?\",\n  'On a scale of 1-10 how \"Emotionally available\" do I seem? Explain.',\n  \"What mannerisms of mine stood out the most to you, if any?\",\n  \"How would you describe our date in one word?\",\n  \"If you were to write my dating profile bio, what would it say?\",\n  \"What part of my personality isn't showcased online?\",\n  \"What do you find most attractive about me that isn't physical?\",\n\n  \"Wild Card Look through each other's social media. Pick your favorite photo. Compare and explain.\",\n  \"Wild Card Write your partner a text outside of your comfort zone at this end of this date. Both players.\",\n  \"Wild Card Ask literally anything. Permission to go there.\",\n];\n\nexport const dating = {\n  one,\n  two,\n  tree,\n};\n","export const common = {\n  decks: {\n    title: \"Deck\",\n    main: \"Main\",\n    dating: \"Dating\",\n  },\n\n  levels: {\n    title: \"Level\",\n    one: \"Level 1\",\n    two: \"Level 2\",\n    tree: \"Level 3\",\n  },\n\n  languages: {\n    title: \"Language\",\n    ru: \"Ru\",\n    en: \"En\",\n  },\n};\n","import { decks } from \"./decks\";\nimport { common } from \"./common\";\n\nexport const ru = {\n  decks,\n  common,\n};\n","import { main } from \"./main\";\nimport { dating } from \"./dating\";\n\nexport const decks = {\n  main,\n  dating,\n};\n","const one = [\n  \"Какое было ваше первое впечатление обо мне?\",\n  \"Как вы думаете, что является самым сложным в том, чем я зарабатываю на жизнь?\",\n  \"Как вы думаете, какое реалити-шоу я, скорее всего, буду смотреть запоем? Объясните\",\n  \"Что мой стиль говорит вам обо мне?\",\n  \"Я похож на кошку или собаку?\",\n  \"Мне кажется, что я больше отношусь к творческому типу или аналитику? Объясните.\",\n  \"Как вы думаете, сколько штрафов за превышение скорости я получил в своей жизни?\",\n  \"Неужели я похож на того, кто сделал бы себе татуировку с именем? Почему или почему нет?\",\n  \"Как вы думаете, на что я, скорее всего, потратюсь?\",\n  \"Закончите предложение: просто взглянув на вас, я подумаю _________.\",\n  \"Какого персонажа я бы сыграл в фильме?\",\n  \"Я вам кого-нибудь напоминаю?\",\n  \"Как вы думаете, кто моя знаменитость?\",\n  \"Как ты думаешь, я когда-нибудь проверял телефон бывшего на предмет улик?\",\n  \"Что вы во мне заметили в первую очередь?\",\n  \"Как вы думаете, что это за песня для караоке?\",\n  \"Если бы вы купили мне подарок, ничего не зная обо мне, кроме того, как я выгляжу, что бы это было?\",\n  \"Что обо мне говорит заставка моего телефона?\",\n  \"Я выгляжу добрым? Объясни.\",\n  \"Как ты думаешь, я легко влюбляюсь? Почему или почему нет?\",\n  \"Как ты думаешь, кем я хотел быть в детстве?\",\n  \"Как вы думаете, я обычно рано, вовремя или опаздываю на мероприятия? Объясните.\",\n  \"Как вы думаете, по какому предмету я хорошо учился в школе? Я провалил какой-нибудь?\",\n  \"Как вы думаете, какой комплимент я слышу чаще всего?\",\n  \"Я похож на жаворонка или на сову? Почему?\",\n  \"Как вы думаете, в каком ресторане быстрого питания я скорее всего поеду? Какой у меня заказ?\",\n  \"Что мой язык тела говорит тебе прямо сейчас?\",\n  \"Что мой Instagram рассказывает обо мне?\",\n  \"Как вы думаете, растения процветают или умирают из-за моей заботы? Объясните.\",\n  \"По шкале от 1 до 10, насколько грязной, по вашему мнению, является моя машина? 1 - самая чистая, 10 - полная катастрофа. Объясните.\",\n  \"Как вы думаете, я был популярен в школе? Объясните.\",\n  \"Как вы думаете, меня когда-нибудь увольняли с работы? Если да, то за что?\",\n  \"Как вы думаете, я запугиваю других? Почему или почему нет?\",\n  \"Какова вероятность того, что я пойду в поход? Насколько сложна моя обстановка?\",\n  \"Что во мне кажется вам самым странным или незнакомым?\",\n  \"Что меня интригует?\",\n  \"Если бы Myspace все еще существовал, какой была бы песня в моем профиле?\",\n\n  \"Wild Card Сохраняйте зрительный контакт в течение тридцати секунд. Что вы заметили?\",\n  \"Wild Card Закрой глаза. Какого цвета моя рубашка?\",\n  \"Wild Card Задайте следующий вопрос и ответьте на него с другим акцентом. (Оба игрока)\",\n  \"Wild Card Нарисуйте картинку вместе. (30 секунд)\",\n  \"Wild Card Запишите то, о чем другие никогда не догадались бы, просто взглянув на вас. (Оба игрока) Сравните.\",\n  \"Wild Card Нарисуйте портреты друг друга в меру своих возможностей. (1 минута) Затем обменяйтесь.\",\n  \"Wild Card Подумайте о своей любимой марке хлопьев. На счет до трех произнесите свои ответы вслух! (Оба игрока)\",\n  \"Wild Card Подумайте о своем любимом детском телешоу всех времен. На счет три скажите это вслух! (Оба игрока)\",\n  \"Wild Card Оцените свои танцевальные навыки по шкале от 1 до 10. На счет до трех произносите ответы вслух! (Оба игрока)\",\n  \"Wild Card Закрой глаза. Какого цвета мои глаза?\",\n  \"Wild Card Сделай предположение обо мне. (Оба игрока)\",\n];\n\nconst two = [\n  \"Как стать лучше?\",\n  \"Как зовут твою маму? И что в ней самое красивое?\",\n  \"Если бы вы могли узнать кого-то в своей жизни на более глубоком уровне, кто бы это был и почему?\",\n  \"Какая самая большая боль, которая не была физической, вы когда-либо испытывали?\",\n  \"Вы скучаете по кому-нибудь прямо сейчас? Думаете, они тоже скучают по вам?\",\n  \"Какую мечту вы отпустилbи?\",\n  \"О чем ты в последний раз солгал своей матери?\",\n  \"Ты когда-нибудь говорил кому-то, что я люблю тебя, но не имел этого в виду? Если да, то почему?\",\n  \"Что вы все еще пытаетесь доказать себе?\",\n  \"Вы врете себе о чем-нибудь?\",\n  \"Как зовут вашу первую любовь и почему вы в нее влюбились?\",\n  \"Какая часть вашей жизни работает? Какая часть вашей жизни болит?\",\n  \"Какой урок вам пришлось дольше всего разучивать?\",\n  \"Если да, то в какой момент вы осознали, что не непобедимы?\",\n  \"Как вы думаете, ваше представление о себе соответствует образу, в котором вас видят люди?\",\n  \"Если бы вы могли поступить по-своему: с кем бы вы были? Где бы вы были? И что бы вы делали?\",\n  \"Есть ли чувство, по которому ты скучаешь?\",\n  \"Какое ваше самое счастливое воспоминание в прошлом году?\",\n  \"Когда вы в последний раз удивлялись себе?\",\n  \"Как бы вы описали одним словом чувство влюбленности?\",\n  \"Как зовут твоего отца? И расскажи мне о нем одну вещь\",\n  \"Чего ты больше боишься, неудачи или успеха? И почему?\",\n  \"Какое было ваше первое воспоминание о счастье?\",\n  \"Чего вы еще хотите?\",\n  \"Какой комплимент вы бы хотели получать чаще?\",\n  \"Вы в последнее время что-нибудь передумали?\",\n  \"Опиши свой идеальный день!\",\n  \"Что самое необъяснимое, что когда-либо случалось с тобой?\",\n  \"Во что бы вы, помоложе, не поверили о своей сегодняшней жизни?\",\n  \"Что бы вы не хотели изменить в себе?\",\n  \"Какое название вы бы дали этой главе своей жизни?\",\n  \"Посторонний когда-нибудь менял вашу жизнь?\",\n  \"Как ты на самом деле?\",\n  \"Когда вас спрашивают, как дела, как часто вы отвечаете правдиво?\",\n  \"Закончите предложения: незнакомые люди описывают меня как _________. Только я знаю, что я _________.\",\n  \"На какой вопрос вы сейчас чаще всего пытаетесь ответить?\",\n  \"Какой лучший комплимент тебе когда-либо делал незнакомец?\",\n\n  \"Wild Card Первый, кто моргнет, должен выявить личную проблему и попросить вашего партнера посоветовать, как они могут с ней справиться.\",\n  \"Wild Card Задайте вопрос, который вы бы слишком боялись задать. То, что вы бы не осмелились задать.\",\n  \"Wild Card Позвоните кому-нибудь, чем вы восхищаетесь, и расскажите, за что вы их цените! (Включите громкую связь)\",\n  \"Wild Card Признайся в чем-то.\",\n  \"Вопросы с подстановочными знаками - это искусство. Создайте свой вопрос\",\n  \"Wild Card Подумайте о чем-то, что вам сильно не нравится и что нравится большинству. На счет три произнесите это вслух! (Оба игрока)\",\n  \"Wild Card Поменяйтесь местами с вашим партнером.\",\n  \"Wild Card Покажи первую фотографию в фотопленке. Объясни.\",\n  \"Wild Card Создать секретное рукопожатие.\",\n  \"Wild Card Спой припев своей любимой песни на все времена. Попробуй ее!\",\n  \"Wild Card Нарисуйте ваше текущее настроение. Затем сравните. (Оба игрока)\",\n  \"Wild Card Оба игрока пишут о себе забавный забавный факт. Сыграйте в игру камень, ножницы, бумага. Проигравший должен раскрыться!\",\n  \"Wild Card Оба игрока пишут вам самое важное в жизни. (30 секунд) Сравните.\",\n  \"Wild Card Перемешайте музыку в своей фонотеке. Объясните первую песню, которая появится!\",\n];\n\nconst tree = [\n  \"Как бы вы описали меня незнакомцу?\",\n  \"Что во мне больше всего вас удивило?\",\n  \"Что было бы для меня идеальным подарком?\",\n  \"Что вас больше всего во мне восхищает?\",\n  \"Исходя из того, что вы узнали обо мне, какую книгу вы бы порекомендовали мне прочитать?\",\n  \"Что во мне труднее всего понять?\",\n  \"О чем я наиболее квалифицирован, чтобы дать совет?\",\n  \"Как вы думаете, что я могу сделать, чтобы кардинально улучшить мою жизнь?\",\n  \"Если бы мы были в группе, как бы нас звали?\",\n  \"С чем я могу вам помочь?\",\n  \"На основании того, что вы узнали обо мне, точно ли мои социальные сети отражают меня? Почему или почему нет?\",\n  \"Что мне нужно услышать прямо сейчас?\",\n  \"Исходя из того, что вы знаете обо мне, у вас есть какие-нибудь рекомендации Netflix?\",\n  \"Как вы думаете, в чем моя суперсила?\",\n  \"Какой урок вы извлечете из нашего разговора?\",\n  \"Когда в этой игре ты почувствовал себя наиболее связанным со мной?\",\n  \"Как заработать на своей уязвимости? Я заслужил это? Как я могу заработать больше?\",\n  \"Как вы думаете, в чем наше самое главное сходство?\",\n  \"Что мы можем создать вместе?\",\n  \"Одним словом, как бы вы описали наш разговор?\",\n  \"Какой мой ответ заставил тебя загореться?\",\n  \"Когда эта игра закончится, что ты обо мне вспомнишь?\",\n  \"Какие части себя вы видите во мне?\",\n  \"Как наши личности дополняют друг друга?\",\n  \"Как вы думаете, почему мы встретились?\",\n  \"Как вы думаете, в чем моя слабость?\",\n  \"Что бы ты почувствовал себя ближе ко мне?\",\n  \"Как вы думаете, чего я боюсь больше всего?\",\n  \"Что этот разговор научил вас о себе?\",\n  \"Как вы думаете, что я должен знать о себе, чего, возможно, не знаю?\",\n  \"Как вы думаете, в чем заключается моя определяющая характеристика?\",\n  \"Вы верите, что у всех есть призвание? Если да, как вы думаете, я нашел свое?\",\n  \"Что вы посоветуете мне отпустить, если что?\",\n  \"Одним словом, опишите, что вы чувствуете прямо сейчас\",\n\n  \"Wild Card Обними своего партнера. Не из дерьмовых. Как за пушистые.\",\n  \"Wild Card Запишите одну вещь, от которой вы хотите отказаться в этом году. Прочтите вслух, а затем вместе разорвите. (Оба игрока)\",\n  \"Wild Card Поменяйте местами песню, которая может понравиться вашему партнеру. (Оба игрока)\",\n  \"Wild Card Посмейте, что ваш партнер на следующей неделе сделает что-то за пределами его зоны комфорта. (Оба игрока)\",\n  \"Wild Card Признайся в чем-то.\",\n  \"Wild Card Сделайте своему партнеру комплимент, который, по вашему мнению, он не слышит достаточно\",\n  \"Wild Card Напишите песню о своем партнере. (30 секунд) Затем спойте ее вслух, погрузитесь в нее! (Оба игрока)\",\n  \"Wild Card Прокрутите Instagram друг друга. Найдите картинку, которая, по вашему мнению, лучше всего отражает сущность вашего партнера, и объясните, почему.\",\n  \"Wild Card Оба игрока делятся чем-то, за что вы больше всего благодарны в данный момент.\",\n  \"Wild Card Сыграйте в игру «камень, ножницы, бумага». Победитель может спросить своего партнера о чем угодно. Проигравший должен ответить.\",\n  \"Wild Card Дайте друг другу прозвища!\",\n  \"Wild Card Создайте свой вопрос. Сделайте его засчитанным.\",\n  \"Wild Card Сделайте селфи вместе.\",\n  \"Wild Card Запишите цель на этот год. Сложите и обменивайте. Призывайте друг друга к ответственности. (Оба игрока)\",\n  \"Wild Card Оба игрока пишут записку самому младшему. (1 минута) Вариант для сравнения.\",\n];\n\nexport const main = {\n  one,\n  two,\n  tree,\n};\n","const one = [\n  \"Как вы думаете, чем я могу зарабатывать на жизнь, просто взглянув на меня?\",\n  \"Как вы думаете, какой у меня типаж? Опишите подробно\",\n  \"Как вы думаете, какой напиток я предпочитаю?\",\n  \"Как вы думаете, сколько у меня отношений? Как вы думаете, сколько раз я был влюблен? Объясните.\",\n  \"Как ты думаешь, каким я был в старшей школе? Объясни.\",\n  \"Как вы думаете, я до сих пор в хороших отношениях с бывшими? Почему или почему нет?\",\n  \"Что вы в первую очередь заметили во мне, когда мы встретились лично?\",\n\n  \"Wild Card Запишите 3 ваших любимых физических качества вашего партнера и прочтите их вслух. Оба игрока.\",\n];\n\nconst two = [\n  \"Что вы часто чувствуете в последнее время?\",\n  \"Есть ли у вас нестандартные мнения о романтических отношениях?\",\n  \"Я знаю, что мне действительно нравится кто-то, когда _________.\",\n  \"Разве секс когда-нибудь мешал твоим прошлым отношениям? Объясни.\",\n  \"Когда в последний раз вы кого-то привидели и почему?\",\n  \"Что во мне заинтриговало вас помимо моего внешнего вида?\",\n  \"Что ваши друзья знают обо мне, если что?\",\n  \"Какая часть вашей работы заряжает вас больше всего? Оставляет вас наиболее истощенным?\",\n  \"Как изменился ваш взгляд на любовь с течением времени, если вообще изменился?\",\n  'Как вы определяете \"свидание\"?',\n  \"Опишите свое самое ужасное горе. Чему это вас научило?\",\n  \"Вы когда-нибудь задумывались об открытых отношениях? Почему или почему нет?\",\n  \"С кем в жизни вы больше всего чувствуете себя рядом? Почему?\",\n  \"Какую из черт характера ваших родителей вы хотите сохранить? Отпустите?\",\n  \"Что нового вы узнали о себе за последнее время?\",\n  \"Что самое сложное в свидании с тобой?\",\n  \"О чем вы сейчас слишком много думаете?\",\n  \"Что вы терпели от других в прошлом, для чего у вас больше нет места?\",\n  \"Какой совет по свиданиям вы дали бы себе в молодости?\",\n  \"Насколько вы эмоционально доступны в настоящее время? Объясните\",\n  \"Что ты узнал о себе, будучи одиноким?\",\n  \"На каком свидании ты был худшее и почему?\",\n  \"А что насчет вас, что вас постоянно не понимают другие?\",\n  \"Что в твоей жизни не подлежит обсуждению?\",\n  \"Что люди, которые вырастили вас, научили вас любви? Как это повлияло на ваши взгляды на любовь сегодня?\",\n\n  \"Wild Card Запишите 2 ваших главных нарушителя отношений. Оба игрока. Сравните\",\n  \"Wild Card Запишите текст вашей любимой песни, о котором вы можете подумать. Сравните и объясните.\",\n  \"Wild Card Поделитесь чем-то, что вы обычно не делаете на первом свидании. Оба игрока.\",\n  \"Wild Card Сделайте друг другу татуировки ближайшей ручкой или маркером. 30 секунд.\",\n  \"Wild Card Запишите 3 самых важных качества в романтическом партнере. Оба игрока. Сравните.\",\n  \"Wild Card Подумайте о самом недооцененном шоу, которое транслируется в настоящее время. На счет 3 скажите свои ответы вслух. Оба игрока.\",\n];\n\nconst tree = [\n  \"Какую песню послушать по дороге домой?\",\n  \"Исходя из того, что вы узнали обо мне, как вы думаете, чего я ищу в романтическом плане?\",\n  \"Насколько я «эмоционально доступным» по шкале от 1 до 10? Объяснять.\",\n  \"Какие мои манеры выделялись вам больше всего, если таковые имеются?\",\n  \"Как бы вы описали наше свидание одним словом?\",\n  \"Если бы вы написали мою биографию в профиле знакомств, что бы там было сказано?\",\n  \"Какая часть моей личности не представлена в Интернете?\",\n  \"Что вам больше всего во мне нравится, кроме физического?\",\n\n  \"Wild Card Просмотрите социальные сети друг друга. Выберите свою любимую фотографию. Сравните и объясните.\",\n  \"Wild Card Напишите своему партнеру текст за пределами вашей зоны комфорта в конце этого свидания. Оба игрока.\",\n  \"Wild Card Спроси буквально все. Разрешите туда пойти.\",\n];\n\nexport const dating = {\n  one,\n  two,\n  tree,\n};\n","export const common = {\n  decks: {\n    title: \"Колода\",\n    main: \"Основая\",\n    dating: \"Свидания\",\n  },\n\n  levels: {\n    title: \"Уровень\",\n    one: \"Уровень 1\",\n    two: \"Уровень 2\",\n    tree: \"Уровень 3\",\n  },\n\n  languages: {\n    title: \"Язык\",\n    ru: \"Ru\",\n    en: \"En\",\n  },\n};\n","import React, { useState, memo, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Deck } from \"../../typings\";\nimport { Props } from \"./types\";\nimport { useCardsTransform } from \"./useCardsTransform\";\n\nimport Card from \"../../components/Card/Card\";\nimport Button from \"@mui/material/Button\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { labels } from \"../../i18n\";\n\nconst FieldStyled = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nconst FieldCardsCounter = styled.div`\n  position: absolute;\n  left: 50%;\n  bottom: 20px;\n  transform: translateX(-50%);\n  color: #c10016;\n`;\n\nconst ButtonPrevStyled = styled(Button)`\n  position: absolute;\n  left: 0;\n  height: 100%;\n  padding-right: 20px;\n  width: 50%;\n\n  svg {\n    position: absolute;\n    left: 20px;\n    top: calc(50% - 12px);\n    transform: rotate(180deg);\n  }\n`;\n\nconst ButtonNextStyled = styled(Button)`\n  position: absolute;\n  right: 0;\n  height: 100%;\n  padding-right: 20px;\n  width: 50%;\n\n  svg {\n    position: absolute;\n    right: 20px;\n    top: calc(50% - 12px);\n  }\n`;\n\nexport const Field: React.FC<Props> = ({ deck, deckLevel, language }) => {\n  const initialCard = [deck[deck.length - 1]];\n  const otherCards = deck.slice(0, -1); // slice last card\n\n  const { cardsTransform } = useCardsTransform(deck);\n  const [deckCards, setDeckCards] = useState(otherCards);\n  const [fieldCards, setFieldCards] = useState(initialCard);\n\n  const label = labels[language].decks;\n  const labelCommon = labels[language].common;\n\n  useEffect(() => {\n    setDeckCards(otherCards);\n    setFieldCards(initialCard);\n  }, [deck, deckLevel, language]);\n\n  const updateDecks = (type: \"NEXT\" | \"PREV\", from: Deck, to: Deck) => {\n    const lastCard = from[from.length - 1];\n\n    if (!lastCard) return;\n\n    const updatedFromCards = from.slice(0, -1); // slice last card\n    const updatedToCards = [...to, lastCard]; // past sliced card in the end\n\n    switch (type) {\n      case \"PREV\":\n        setDeckCards(updatedToCards);\n        setFieldCards(updatedFromCards);\n\n        break;\n\n      case \"NEXT\":\n        setDeckCards(updatedFromCards);\n        setFieldCards(updatedToCards);\n    }\n  };\n\n  const onNextCard = () => {\n    updateDecks(\"NEXT\", deckCards, fieldCards);\n  };\n\n  const onPrevCard = () => {\n    if (fieldCards.length === 1) return;\n\n    updateDecks(\"PREV\", fieldCards, deckCards);\n  };\n\n  const isPrevDisabled = fieldCards.length === 0;\n  const isNextDisabled = deckCards.length === 0;\n\n  return (\n    <FieldStyled>\n      <ButtonPrevStyled onClick={onPrevCard} disabled={isPrevDisabled}>\n        <ArrowForwardIosIcon />\n      </ButtonPrevStyled>\n\n      <ButtonNextStyled onClick={onNextCard} disabled={isNextDisabled}>\n        <ArrowForwardIosIcon />\n      </ButtonNextStyled>\n\n      {fieldCards.map((text, index) => {\n        return (\n          <Card\n            key={\"card_\" + index}\n            text={text}\n            transform={cardsTransform[index]}\n          />\n        );\n      })}\n\n      <FieldCardsCounter>\n        <b>{fieldCards.length}</b> / <b>{deck.length}</b>\n      </FieldCardsCounter>\n    </FieldStyled>\n  );\n};\n\nexport default memo(Field);\n","import { useState, useEffect } from \"react\";\n\nimport { Deck } from \"../../typings\";\nimport { getRandomInt } from \"../../utils/getRandomInt\";\n\nexport const useCardsTransform = (deck: Deck) => {\n  const [cardsTransform, setCardsTransform] = useState<string[]>([]);\n\n  useEffect(() => {\n    const transform = deck.map((_, i) => {\n      if (i === 0) {\n        return `rotate($0deg) translate(0px, 0px)`;\n      }\n\n      const rotate = getRandomInt(-10, 10);\n      const translateX = getRandomInt(-8, 10);\n      const translateY = getRandomInt(-8, 10);\n\n      return `rotate(${rotate}deg) translate(${translateX}px, ${translateY}px)`;\n    });\n\n    setCardsTransform(transform);\n  }, [deck]);\n\n  return { cardsTransform };\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"desc\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M180.088524,171.365701 C226.18668,182.948701 261,235.689144 261,299 L61,299 C61,235.689144 95.8133205,182.948701 141.911476,171.365701 C112.529273,163.056483 91,136.042457 91,104 C91,65.3400675 122.340068,34 161,34 C199.659932,34 231,65.3400675 231,104 C231,136.042457 209.470727,163.056483 180.08855,171.365708 L180.088524,171.365701 Z\",\n  id: \"path-1\"\n}), /*#__PURE__*/React.createElement(\"filter\", {\n  filterUnits: \"objectBoundingBox\",\n  height: \"200%\",\n  id: \"filter-2\",\n  width: \"200%\",\n  x: \"-50%\",\n  y: \"-50%\"\n}, /*#__PURE__*/React.createElement(\"feOffset\", {\n  dx: 0,\n  dy: 4,\n  in: \"SourceAlpha\",\n  result: \"shadowOffsetOuter1\"\n}), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n  in: \"shadowOffsetOuter1\",\n  result: \"shadowBlurOuter1\",\n  stdDeviation: 2\n}), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n  in: \"shadowBlurOuter1\",\n  type: \"matrix\",\n  values: \"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\"\n})), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M249.088524,211.365701 C295.18668,222.948701 330,275.689144 330,339 L130,339 C130,275.689144 164.81332,222.948701 210.911476,211.365701 C181.529273,203.056483 160,176.042457 160,144 C160,105.340068 191.340068,74 230,74 C268.659932,74 300,105.340068 300,144 C300,176.042457 278.470727,203.056483 249.08855,211.365708 L249.088524,211.365701 Z\",\n  id: \"path-3\"\n}), /*#__PURE__*/React.createElement(\"filter\", {\n  filterUnits: \"objectBoundingBox\",\n  height: \"200%\",\n  id: \"filter-4\",\n  width: \"200%\",\n  x: \"-50%\",\n  y: \"-50%\"\n}, /*#__PURE__*/React.createElement(\"feOffset\", {\n  dx: 0,\n  dy: 4,\n  in: \"SourceAlpha\",\n  result: \"shadowOffsetOuter1\"\n}), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n  in: \"shadowOffsetOuter1\",\n  result: \"shadowBlurOuter1\",\n  stdDeviation: 2\n}), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n  in: \"shadowBlurOuter1\",\n  type: \"matrix\",\n  values: \"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\"\n})));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  id: \"Page-1\",\n  stroke: \"none\",\n  strokeWidth: 1\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"humans\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M200,400 C310.45695,400 400,310.45695 400,200 C400,89.54305 310.45695,0 200,0 C89.54305,0 0,89.54305 0,200 C0,310.45695 89.54305,400 200,400 Z\",\n  fill: \"#AAD8B0\",\n  id: \"Background-Copy-2\"\n}), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Oval-159\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  fill: \"black\",\n  fillOpacity: 1,\n  filter: \"url(#filter-2)\",\n  xlinkHref: \"#path-1\"\n}), /*#__PURE__*/React.createElement(\"use\", {\n  fill: \"#67ADD5\",\n  fillRule: \"evenodd\",\n  xlinkHref: \"#path-1\"\n})), /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Oval-159\"\n}, /*#__PURE__*/React.createElement(\"use\", {\n  fill: \"black\",\n  fillOpacity: 1,\n  filter: \"url(#filter-4)\",\n  xlinkHref: \"#path-3\"\n}), /*#__PURE__*/React.createElement(\"use\", {\n  fill: \"#DCF0E6\",\n  fillRule: \"evenodd\",\n  xlinkHref: \"#path-3\"\n}))));\n\nfunction SvgFriends(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"400px\",\n    viewBox: \"0 0 400 400\",\n    width: \"400px\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFriends);\nexport default __webpack_public_path__ + \"static/media/friends.fe515231.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Props } from \"./types\";\nimport { Language } from \"../../typings\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Container from \"@mui/material/Container\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { ReactComponent as LogoIcon } from \"../../assets/svg/friends.svg\";\n\nimport { labels } from \"../../i18n\";\n\nconst ContainerStyled = styled(Container)`\n  padding: 0;\n`;\n\nconst LogoIconStyled = styled(LogoIcon)`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;\n\nconst Header: React.FC<Props> = ({ language, setLanguage }) => {\n  const ID = {\n    LANGUAGE: \"language\",\n    DECK_LEVEL: \"deckLevel\",\n    DECK_VARIANT: \"deckVariant\",\n  };\n\n  const labelCommon = labels[language].common;\n\n  const languagesOptions = Object.keys(labels).map(\n    (language) => language\n  ) as Language[];\n\n  const handleChange = (event: any) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case ID.LANGUAGE:\n        setLanguage(value);\n\n        break;\n    }\n  };\n\n  return (\n    <AppBar position=\"relative\">\n      <ContainerStyled\n        maxWidth=\"md\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: \"12px 16px\",\n        }}\n      >\n        <LogoIconStyled />\n\n        <FormControl sx={{ width: 100, color: \"#fff\" }}>\n          <InputLabel id=\"language\">{labelCommon.languages.title}</InputLabel>\n\n          <Select\n            id=\"language\"\n            name={ID.LANGUAGE}\n            value={language}\n            label={labelCommon.languages.title}\n            labelId=\"language\"\n            onChange={handleChange}\n          >\n            {languagesOptions.map((name) => (\n              <MenuItem key={labelCommon.languages[name]} value={name}>\n                <ListItemText primary={labelCommon.languages[name]} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </ContainerStyled>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Props } from \"./types\";\nimport { DeckLevel, DeckVariant } from \"../../typings\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Container from \"@mui/material/Container\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nimport { labels } from \"../../i18n\";\n\nconst ContainerStyled = styled(Container)`\n  padding: 20px 24px 16px;\n`;\n\nconst ActionBar: React.FC<Props> = ({\n  language,\n  deckLevel,\n  deckVariant,\n  setDeckLevel,\n  setDeckVariant,\n}) => {\n  const ID = {\n    LANGUAGE: \"language\",\n    DECK_LEVEL: \"deckLevel\",\n    DECK_VARIANT: \"deckVariant\",\n  };\n\n  const label = labels[language].decks;\n  const labelCommon = labels[language].common;\n\n  const levelOptions = Object.keys(label[deckVariant]).map(\n    (variant) => variant\n  ) as DeckLevel[];\n\n  const variantOptions = Object.keys(label).map(\n    (deck) => deck\n  ) as DeckVariant[];\n\n  const handleChange = (event: any) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case ID.DECK_LEVEL:\n        setDeckLevel(value);\n\n        break;\n\n      case ID.DECK_VARIANT:\n        setDeckVariant(value);\n\n        break;\n    }\n  };\n\n  return (\n    <Paper elevation={10}>\n      <ContainerStyled\n        maxWidth=\"md\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <FormControl sx={{ minWidth: 130, maxWidth: 240, width: \"48%\" }}>\n          <InputLabel id=\"deck\">{labelCommon.decks.title}</InputLabel>\n\n          <Select\n            id=\"deck\"\n            name={ID.DECK_VARIANT}\n            label={labelCommon.decks.title}\n            value={deckVariant}\n            labelId=\"deck\"\n            onChange={handleChange}\n          >\n            {variantOptions.map((name) => (\n              <MenuItem key={name} value={name}>\n                <ListItemText primary={labelCommon.decks[name]} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <FormControl sx={{ minWidth: 130, maxWidth: 240, width: \"48%\" }}>\n          <InputLabel id=\"level\">{labelCommon.levels.title}</InputLabel>\n\n          <Select\n            id=\"level\"\n            name={ID.DECK_LEVEL}\n            label={labelCommon.levels.title}\n            value={deckLevel}\n            labelId=\"level\"\n            onChange={handleChange}\n          >\n            {levelOptions.map((name) => (\n              <MenuItem key={name} value={name}>\n                <ListItemText primary={labelCommon.levels[name]} />\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </ContainerStyled>\n    </Paper>\n  );\n};\n\nexport default ActionBar;\n","import React, { useState } from \"react\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport styled from \"styled-components\";\n\nimport { DeckLevel, DeckVariant, Language } from \"../../typings\";\nimport { shuffleArray } from \"../../utils/shuffleArray\";\n\nimport Body from \"../../components/Body/Body\";\nimport Field from \"../Field/Field\";\nimport Header from \"../../components/Header/Header\";\nimport ActionBar from \"../../components/ActionBar/ActionBar\";\n\nimport { labels } from \"../../i18n\";\n\nconst ContainerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: -webkit-fill-available;\n  height: 100vh;\n`;\n\nconst App: React.FC = () => {\n  const [language, setLanguage] = useState<Language>(\"ru\");\n  const [deckLevel, setDeckLevel] = useState<DeckLevel>(\"one\");\n  const [deckVariant, setDeckVariant] = useState<DeckVariant>(\"main\");\n\n  const deck = labels[language].decks[deckVariant][deckLevel];\n  const deckShuffled = shuffleArray([...deck]);\n\n  return (\n    <>\n      <CssBaseline />\n      <ContainerStyled>\n        <Header language={language} setLanguage={setLanguage} />\n\n        <Body>\n          <Field\n            deck={deckShuffled}\n            deckLevel={deckLevel}\n            language={language}\n          />\n        </Body>\n\n        <ActionBar\n          language={language}\n          deckLevel={deckLevel}\n          deckVariant={deckVariant}\n          setDeckLevel={setDeckLevel}\n          setDeckVariant={setDeckVariant}\n        />\n      </ContainerStyled>\n    </>\n  );\n};\n\nexport default App;\n","/**\n *\n * Shuffle array «in-place»\n * If you don't want to modify the original array, first make a copy\n */\n\nexport const shuffleArray = (array: string[]) => {\n  let currentIndex = array.length;\n  let randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}